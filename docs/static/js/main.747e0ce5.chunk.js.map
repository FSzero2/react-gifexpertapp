{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","tittle","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC9BR,GAAe,SAAAS,GAAI,OAAQP,GAAR,mBAAuBO,OAC1CN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCFXO,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OAAQd,EAAU,EAAVA,IAElC,OACI,sBAAKe,UAAU,8CAAf,UACI,qBAAKC,IAAMhB,EAAKiB,IAAMH,IACtB,kCAAMA,EAAN,WCHCI,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECFwB,SAAEA,GAG1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAU,WAENzB,EAASC,GACJyB,MAAM,SAAAC,GAEHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAKtB,CAAErB,IAKEsB,EDxB0BK,CAAc3B,GAAlCa,EAAb,EAAQN,KAAac,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAAyDjB,EAAzD,OAGEqB,GAAW,mBAAGJ,UAAU,0CAAb,qBAGb,qBAAKA,UAAU,YAAf,SAGQJ,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEjBzBiB,EAAe,WAGxB,MAAoC1C,mBAAS,CAAC,iBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCAEA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCf1B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.747e0ce5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n       \r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2 ){\r\n        setcategories( cats => [   inputValue, ...cats ] );\r\n        setinputValue('');\r\n\r\n    }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\n    export const getGifs = async( category ) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=PkxFRoFzS50FEEdDnswp5BzFBdKhi6kz`\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n       return gifs;\r\n\r\n\r\n\r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {tittle, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__slideInLeft\">\r\n            <img src= {url} alt={ tittle }/>\r\n            <p> { tittle } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n   \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__slideInLeft\"> {category} </h3>\r\n\r\n\r\n            { loading && <p className=\"animate__animated animate__slideInRight\">loading</p> }\r\n\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n }\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n   \r\n\r\n\r\n    return state;\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setcategories] = useState(['Chainsaw Man'])\r\n\r\n    return (\r\n        <>      \r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setcategories={ setcategories }/> \r\n        <hr />\r\n\r\n        <ol>\r\n            { \r\n                categories.map( category => \r\n                    <GifGrid \r\n                    key={ category }\r\n                    category={ category }\r\n                    />\r\n                )   \r\n            }\r\n        </ol>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}